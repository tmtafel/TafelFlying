@using Microsoft.AspNet.Identity.EntityFramework
@using TafelFlyingServices.Models
@model TafelFlyingServices.Models.EditViewModel

@{
    ViewBag.Title = "title";
    var db = new ApplicationDbContext();
    Dictionary<string, string> roles = db.Roles.ToDictionary(role => role.Id, role => role.Name);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pilot</h4>
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId, new SelectList(roles, "Key", "Value"), new {id = "ddlRole", @class = "form-control"})
                <div id="dvIsPilot" class="form-control">
                    <div class="col-xs-4">
                        Is User a Pilot
                    </div>
                    <div class="col-xs-2">
                        @Html.CheckBoxFor(m => m.IsAPilot, new {@class = "form-control"})
                    </div>
                    <div class="col-xs-4 view-to-public">
                        View to Public
                    </div>
                    <div class="col-xs-2 view-to-public">
                        @Html.CheckBoxFor(m => m.ViewToPublic, new {@class = "form-control"})
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 pilot-buttons">
                <input type="submit" value="Save" class="btn btn-default" />
                <ul class="pagination">
                    <li>@Html.ActionLink("Back to List", "Index")</li>
                    <li>@Html.ActionLink("Delete", "Delete", new {id = Model.Id})</li>

                </ul>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <h4>Viewable Planes</h4>
                <ul>
                    
                    @{
                        using (var _db = new ApplicationDbContext())
                        {
                            List<IdentityUserClaim> planeAccesses = _db.Users.Find(Model.Id).Claims.Where(c => c.ClaimType == "PlaneAccess").ToList();
                            foreach (IdentityUserClaim planeAccess in planeAccesses)
                            {
                                <li>
                                    @planeAccess.ClaimValue
                                </li>
                            }
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
}



@section Scripts {
    <script src="~/Scripts/RoleChange.js"></script>
}